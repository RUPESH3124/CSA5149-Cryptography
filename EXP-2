#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26

void encrypt(char* plaintext, char* key, char* ciphertext) {
    int i, j;
    char ch;

    for(i = 0; plaintext[i] != '\0'; ++i) {
        ch = plaintext[i];
        
        if (isupper(ch)) {
            j = ch - 'A';
            ciphertext[i] = toupper(key[j]);
        } else if (islower(ch)) {
            j = ch - 'a';
            ciphertext[i] = tolower(key[j]);
        } else {
            ciphertext[i] = ch;
        }
    }
    ciphertext[i] = '\0'; 
}

int main() {
    char plaintext[100];
    char key[ALPHABET_SIZE + 1]; 
    char ciphertext[100];

    printf("Enter the plaintext: ");
    gets(plaintext); 

    printf("Enter the key (26 unique letters): ");
    scanf("%s", key); 

    if (strlen(key) != ALPHABET_SIZE) {
        printf("Key must be exactly 26 letters long.\n");
        return 1;
    }

    int freq[ALPHABET_SIZE] = {0};
    for (int i = 0; i < ALPHABET_SIZE; ++i) {
        if (!isalpha(key[i])) {
            printf("Key must only contain alphabetic characters.\n");
            return 1;
        }
        int index = toupper(key[i]) - 'A';
        if (freq[index] > 0) {
            printf("Key must contain unique letters.\n");
            return 1;
        }
        freq[index]++;
    }

    encrypt(plaintext, key, ciphertext);

    printf("Encrypted text: %s\n", ciphertext);

    return 0;
}
